# serializer version: 1
# name: test_all_entities[binary_sensor.1p7k_500006_contactor_failure-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_contactor_failure',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Contactor failure',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'contactor_failure',
    'unique_id': '500006_contactor_failure',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_contactor_failure-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Contactor failure',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_contactor_failure',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_cp_diode_failure-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_cp_diode_failure',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Cp diode failure',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'cp_diode_failure',
    'unique_id': '500006_cp_diode_failure',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_cp_diode_failure-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Cp diode failure',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_cp_diode_failure',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_critical_temp-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_critical_temp',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Critical temp',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'critical_temp',
    'unique_id': '500006_critical_temp',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_critical_temp-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Critical temp',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_critical_temp',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_meter_fault-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_meter_fault',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Meter fault',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'meter_fault',
    'unique_id': '500006_meter_fault',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_meter_fault-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Meter fault',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_meter_fault',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_overcurrent-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_overcurrent',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Overcurrent',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'overcurrent',
    'unique_id': '500006_overcurrent',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_overcurrent-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Overcurrent',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_overcurrent',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_overtemp-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_overtemp',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Overtemp',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'overtemp',
    'unique_id': '500006_overtemp',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_overtemp-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Overtemp',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_overtemp',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_overvoltage_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_overvoltage_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Overvoltage error',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'overvoltage_error',
    'unique_id': '500006_overvoltage_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_overvoltage_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Overvoltage error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_overvoltage_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_rcd_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_rcd_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Rcd error',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'rcd_error',
    'unique_id': '500006_rcd_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_rcd_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Rcd error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_rcd_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_state_e_activated-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_state_e_activated',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'State e activated',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'state_e_activated',
    'unique_id': '500006_state_e_activated',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_state_e_activated-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 State e activated',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_state_e_activated',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'off',
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_undervoltage_error-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'binary_sensor',
    'entity_category': <EntityCategory.DIAGNOSTIC: 'diagnostic'>,
    'entity_id': 'binary_sensor.1p7k_500006_undervoltage_error',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <BinarySensorDeviceClass.PROBLEM: 'problem'>,
    'original_icon': None,
    'original_name': 'Undervoltage error',
    'platform': 'lektrico',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': 'undervoltage_error',
    'unique_id': '500006_undervoltage_error',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_entities[binary_sensor.1p7k_500006_undervoltage_error-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'problem',
      'friendly_name': '1p7k_500006 Undervoltage error',
    }),
    'context': <ANY>,
    'entity_id': 'binary_sensor.1p7k_500006_undervoltage_error',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'on',
  })
# ---
