# serializer version: 1
# name: test_button_unavailable[button.test_user_allocate_all_stat_points-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.test_user_allocate_all_stat_points',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Allocate all stat points',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabitipyButtonEntity.ALLOCATE_ALL_STAT_POINTS: 'allocate_all_stat_points'>,
    'unique_id': '00000000-0000-0000-0000-000000000000_allocate_all_stat_points',
    'unit_of_measurement': None,
  })
# ---
# name: test_button_unavailable[button.test_user_allocate_all_stat_points-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Allocate all stat points',
    }),
    'context': <ANY>,
    'entity_id': 'button.test_user_allocate_all_stat_points',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_button_unavailable[button.test_user_buy_a_health_potion-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.test_user_buy_a_health_potion',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Buy a health potion',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabitipyButtonEntity.BUY_HEALTH_POTION: 'buy_health_potion'>,
    'unique_id': '00000000-0000-0000-0000-000000000000_buy_health_potion',
    'unit_of_measurement': None,
  })
# ---
# name: test_button_unavailable[button.test_user_buy_a_health_potion-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Buy a health potion',
    }),
    'context': <ANY>,
    'entity_id': 'button.test_user_buy_a_health_potion',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_button_unavailable[button.test_user_revive_from_death-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.test_user_revive_from_death',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Revive from death',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabitipyButtonEntity.REVIVE: 'revive'>,
    'unique_id': '00000000-0000-0000-0000-000000000000_revive',
    'unit_of_measurement': None,
  })
# ---
# name: test_button_unavailable[button.test_user_revive_from_death-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Revive from death',
    }),
    'context': <ANY>,
    'entity_id': 'button.test_user_revive_from_death',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_button_unavailable[button.test_user_start_my_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.test_user_start_my_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Start my day',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabitipyButtonEntity.RUN_CRON: 'run_cron'>,
    'unique_id': '00000000-0000-0000-0000-000000000000_run_cron',
    'unit_of_measurement': None,
  })
# ---
# name: test_button_unavailable[button.test_user_start_my_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Start my day',
    }),
    'context': <ANY>,
    'entity_id': 'button.test_user_start_my_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unavailable',
  })
# ---
# name: test_buttons[button.test_user_allocate_all_stat_points-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.test_user_allocate_all_stat_points',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Allocate all stat points',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabitipyButtonEntity.ALLOCATE_ALL_STAT_POINTS: 'allocate_all_stat_points'>,
    'unique_id': '00000000-0000-0000-0000-000000000000_allocate_all_stat_points',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[button.test_user_allocate_all_stat_points-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Allocate all stat points',
    }),
    'context': <ANY>,
    'entity_id': 'button.test_user_allocate_all_stat_points',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[button.test_user_buy_a_health_potion-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.test_user_buy_a_health_potion',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Buy a health potion',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabitipyButtonEntity.BUY_HEALTH_POTION: 'buy_health_potion'>,
    'unique_id': '00000000-0000-0000-0000-000000000000_buy_health_potion',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[button.test_user_buy_a_health_potion-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Buy a health potion',
    }),
    'context': <ANY>,
    'entity_id': 'button.test_user_buy_a_health_potion',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[button.test_user_revive_from_death-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.test_user_revive_from_death',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Revive from death',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabitipyButtonEntity.REVIVE: 'revive'>,
    'unique_id': '00000000-0000-0000-0000-000000000000_revive',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[button.test_user_revive_from_death-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Revive from death',
    }),
    'context': <ANY>,
    'entity_id': 'button.test_user_revive_from_death',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_buttons[button.test_user_start_my_day-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'button',
    'entity_category': None,
    'entity_id': 'button.test_user_start_my_day',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': None,
    'original_name': 'Start my day',
    'platform': 'habitica',
    'previous_unique_id': None,
    'supported_features': 0,
    'translation_key': <HabitipyButtonEntity.RUN_CRON: 'run_cron'>,
    'unique_id': '00000000-0000-0000-0000-000000000000_run_cron',
    'unit_of_measurement': None,
  })
# ---
# name: test_buttons[button.test_user_start_my_day-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'test-user Start my day',
    }),
    'context': <ANY>,
    'entity_id': 'button.test_user_start_my_day',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
