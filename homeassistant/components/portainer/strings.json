{
  "config": {
    "step": {
      "user": {
        "description": "Set up your Portainer instance.",
        "data": {
          "host": "[%key:common::config_flow::data::host%]",
          "access_token": "[%key:common::config_flow::data::access_token%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]",
          "port": "[%key:common::config_flow::data::port%]"
        },
        "data_description": {
          "host": "The hostname or IP address of the device running your Portainer instance.",
          "access_token": "The access token from the Portainer admin panel. e.g. prt_xxxxx"
        }
      }
    },
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_account%]",
      "already_in_progress": "[%key:common::config_flow::abort::already_in_progress%]",
      "oauth_error": "[%key:common::config_flow::abort::oauth2_error%]",
      "oauth_timeout": "[%key:common::config_flow::abort::oauth2_timeout%]",
      "missing_configuration": "[%key:common::config_flow::abort::oauth2_missing_configuration%]",
      "missing_credentials": "[%key:common::config_flow::abort::oauth2_missing_credentials%]",
      "authorize_url_timeout": "[%key:common::config_flow::abort::oauth2_authorize_url_timeout%]",
      "no_url_available": "[%key:common::config_flow::abort::oauth2_no_url_available%]",
      "user_rejected_authorize": "[%key:common::config_flow::abort::oauth2_user_rejected_authorize%]",
      "oauth_unauthorized": "[%key:common::config_flow::abort::oauth2_unauthorized%]",
      "oauth_failed": "[%key:common::config_flow::abort::oauth2_failed%]",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]",
      "wrong_account": "You can only reauthenticate this entry with the same account.",
      "missing_amc_scope": "The `Authentication API` and the `Portainer Connect API` are not connected to your application in the Developer Portal."
    },
    "create_entry": {
      "default": "[%key:common::config_flow::create_entry::authenticated%]"
    }
  },
  "entity": {
    "sensor": {
      "container_state": {
        "name": "{container}",
        "state": {
          "created": "Created",
          "dead": "Dead",
          "exited": "Exited",
          "paused": "Paused",
          "restarting": "Restarting",
          "running": "Running"
        }
      },
      "total_cpu": {
        "name": "Total CPU"
      },
      "total_memory": {
        "name": "Total memory"
      }
    }
  }
}
