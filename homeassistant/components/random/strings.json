{
  "config": {
    "title": "Random Component",
    "step": {
      "binary_sensor": {
        "title": "Create Random Binary Sensor",
        "data": {
          "device_class": "[%key:component::random::config::step::sensor::data::device_class%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "description": "This helper allows you to create a binary sensor that emits a random value."
      },
      "sensor": {
        "title": "Create Random Sensor",
        "data": {
          "device_class": "Device class",
          "name": "[%key:common::config_flow::data::name%]",
          "minimum": "Minimum",
          "maximum": "Maximum",
          "unit_of_measurement": "Unit of measurement"
        },
        "description": "This helper allows you to create a sensor that emits a random value."
      },
      "user": {
        "title": "Random Helper",
        "description": "This helper allows you to create a helper that emits a random value.",
        "menu_options": {
          "binary_sensor": "Create Random Binary Sensor",
          "sensor": "Create Random Sensor"
        }
      }
    }
  },
  "options": {
    "step": {
      "binary_sensor": {
        "title": "Adjust Random Binary Sensor",
        "description": "This helper does not have any options."
      },
      "sensor": {
        "title": "Adjust Random Sensor",
        "data": {
          "device_class": "[%key:component::random::config::step::sensor::data::device_class%]",
          "minimum": "[%key:component::random::config::step::sensor::data::minimum%]",
          "maximum": "[%key:component::random::config::step::sensor::data::maximum%]",
          "unit_of_measurement": "[%key:component::random::config::step::sensor::data::unit_of_measurement%]"
        }
      }
    }
  },
  "selector": {
    "binary_sensor_device_class": {
      "options": {
        "battery": "[%key:component::binary_sensor::entity_component::battery::name%]",
        "battery_charging": "[%key:component::binary_sensor::entity_component::battery_charging::name%]",
        "carbon_monoxide": "[%key:component::binary_sensor::entity_component::carbon_monoxide::name%]",
        "connectivity": "[%key:component::binary_sensor::entity_component::connectivity::name%]",
        "cold": "[%key:component::binary_sensor::entity_component::cold::name%]",
        "door": "[%key:component::binary_sensor::entity_component::door::name%]",
        "garage_door": "[%key:component::binary_sensor::entity_component::garage_door::name%]",
        "gas": "[%key:component::binary_sensor::entity_component::gas::name%]",
        "heat": "[%key:component::binary_sensor::entity_component::heat::name%]",
        "light": "[%key:component::binary_sensor::entity_component::light::name%]",
        "lock": "[%key:component::binary_sensor::entity_component::lock::name%]",
        "moisture": "[%key:component::binary_sensor::entity_component::moisture::name%]",
        "motion": "[%key:component::binary_sensor::entity_component::motion::name%]",
        "moving": "[%key:component::binary_sensor::entity_component::moving::name%]",
        "occupancy": "[%key:component::binary_sensor::entity_component::occupancy::name%]",
        "opening": "[%key:component::binary_sensor::entity_component::opening::name%]",
        "plug": "[%key:component::binary_sensor::entity_component::plug::name%]",
        "power": "[%key:component::binary_sensor::entity_component::power::name%]",
        "presence": "[%key:component::binary_sensor::entity_component::presence::name%]",
        "problem": "[%key:component::binary_sensor::entity_component::problem::name%]",
        "running": "[%key:component::binary_sensor::entity_component::running::name%]",
        "safety": "[%key:component::binary_sensor::entity_component::safety::name%]",
        "smoke": "[%key:component::binary_sensor::entity_component::smoke::name%]",
        "sound": "[%key:component::binary_sensor::entity_component::sound::name%]",
        "tamper": "[%key:component::binary_sensor::entity_component::tamper::name%]",
        "update": "[%key:component::binary_sensor::entity_component::update::name%]",
        "vibration": "[%key:component::binary_sensor::entity_component::vibration::name%]",
        "window": "[%key:component::binary_sensor::entity_component::window::name%]"
      }
    },
    "sensor_device_class": {
      "options": {
        "apparent_power": "[%key:component::sensor::entity_component::apparent_power::name%]",
        "aqi": "[%key:component::sensor::entity_component::aqi::name%]",
        "atmospheric_pressure": "[%key:component::sensor::entity_component::atmospheric_pressure::name%]",
        "battery": "[%key:component::sensor::entity_component::battery::name%]",
        "carbon_dioxide": "[%key:component::sensor::entity_component::carbon_dioxide::name%]",
        "carbon_monoxide": "[%key:component::sensor::entity_component::carbon_monoxide::name%]",
        "conductivity": "[%key:component::sensor::entity_component::conductivity::name%]",
        "current": "[%key:component::sensor::entity_component::current::name%]",
        "data_rate": "[%key:component::sensor::entity_component::data_rate::name%]",
        "data_size": "[%key:component::sensor::entity_component::data_size::name%]",
        "date": "[%key:component::sensor::entity_component::date::name%]",
        "distance